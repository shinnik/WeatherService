{"version":3,"sources":["containers/wheatherService.module.css","components/Input/Input.module.css","components/Icon/Icon.module.css","components/Datalist/Datalist.module.css","components/Text/Text.module.css","components/Layout/Layout.module.css","components/Icon/icons/valid.svg","components/Icon/icons/invalid.svg","components/Icon/icons/info.svg","components/Icon/icons/erase.svg","components/Icon/icons/arrow-down.svg","components/Icon/icons/phone.svg","components/Icon/icons/location.svg","components/Layout/Layout.js","components/Input/Input.js","components/Icon/types.js","components/Icon/Icon.js","components/Datalist/Datalist.js","utils/transformCityJsonToArr.js","components/Text/Text.js","containers/wheatherService.js","utils/throttle.js","store/actions/wheatherService.js","store/actions/actionTypes.js","App.js","store/reducers/main.js","index.js"],"names":["module","exports","List","listElement","Input","Body","Wrapper","DatalistInput","invalid","FileInput","Label","Icon","info","valid","arrowdown","erase","DatalistInputWrapper","Container","IconWrapper","Option","Text","normal","L","Filename","WeatherValue","Remover","AdListHeader","M","AdvBodyText","UserDataText","forHeader","Layout","__webpack_require__","p","_ref","children","react_default","a","createElement","className","styles","validation","placeholder","multiline","attrs","Object","objectWithoutProperties","classes","classNames","Tag","assign","defaultProps","iconTypes","phone","location","id","iconType","onClickAction","iconStyles","Fragment","onClick","htmlFor","src","alt","Datalist","options","value","onOptionSelected","onEraseText","_useState","useState","_useState2","slicedToArray","listOpened","setListOpened","components_Input_Input","components_Icon_Icon","map","city","index","event","key","require","sizes","S","validator","size","WeatherService","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onSelectCity","func","ms","savedArgs","savedThis","isThrottled","wrapper","arguments","apply","setTimeout","throttle","onTypeText","target","_this2","Text_Text","components_Datalist_Datalist","currentValue","cities","onChange","onChangeHandler","onEraseCity","innerText","weather","temp","pressure","humidity","temp_min","temp_max","Component","connect","state","dispatch","content","type","typeText","selectCity","fetch","concat","then","resp","json","data","main","catch","err","getCityWeather","App","Layout_Layout","wheatherService","initialState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","length","undefined","action","console","log","objectSpread","_action$weather","Math","round","applyMiddleware","thunk","ReactDOM","render","react_redux_es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.98160acf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"List\":\"wheatherService_List__UqpzC\",\"listElement\":\"wheatherService_listElement__3drN3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__2ZMeK\",\"Body\":\"Input_Body__1Yxpl\",\"Wrapper\":\"Input_Wrapper__7MPSt\",\"DatalistInput\":\"Input_DatalistInput__1-ML2\",\"invalid\":\"Input_invalid__2u9yB\",\"FileInput\":\"Input_FileInput__3XjY2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Label\":\"Icon_Label__1jEyK\",\"Icon\":\"Icon_Icon__13HT_\",\"info\":\"Icon_info__1ggYJ\",\"valid\":\"Icon_valid__2wdC9\",\"invalid\":\"Icon_invalid__2PW_G\",\"arrowdown\":\"Icon_arrowdown__hXIch\",\"erase\":\"Icon_erase__2qp_2\",\"Wrapper\":\"Icon_Wrapper__39pdN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DatalistInputWrapper\":\"Datalist_DatalistInputWrapper__1TYr8\",\"Container\":\"Datalist_Container__F-FSr\",\"IconWrapper\":\"Datalist_IconWrapper__wDqVF\",\"List\":\"Datalist_List__2cOfG\",\"Option\":\"Datalist_Option__189TP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Text\":\"Text_Text__2fSt1\",\"normal\":\"Text_normal__w1lgn\",\"L\":\"Text_L__Njion\",\"Filename\":\"Text_Filename__2eB7L\",\"WeatherValue\":\"Text_WeatherValue__29H54\",\"Remover\":\"Text_Remover__SdLzb\",\"invalid\":\"Text_invalid__1KgNh\",\"valid\":\"Text_valid__1K_ZU\",\"info\":\"Text_info__2yE0s\",\"AdListHeader\":\"Text_AdListHeader__13s9k\",\"M\":\"Text_M__XMSHp\",\"AdvBodyText\":\"Text_AdvBodyText__-H16z\",\"UserDataText\":\"Text_UserDataText__3F3oi\",\"forHeader\":\"Text_forHeader__3qCwf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__3SBgk\"};","module.exports = __webpack_public_path__ + \"static/media/valid.2151cce6.svg\";","module.exports = __webpack_public_path__ + \"static/media/invalid.e06d0a84.svg\";","module.exports = __webpack_public_path__ + \"static/media/info.7195a963.svg\";","module.exports = __webpack_public_path__ + \"static/media/erase.d6858d4a.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrow-down.cc6ab263.svg\";","module.exports = __webpack_public_path__ + \"static/media/phone.2ffbaf4d.svg\";","module.exports = __webpack_public_path__ + \"static/media/location.4e914679.svg\";","import React from 'react';\nimport styles from './Layout.module.css';\n\nexport const Layout = ({ children }) => {\n    return (\n        <div className={styles.Layout}>\n            { children }\n        </div>\n    )\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport styles from './Input.module.css';\n\n\nconst Input = ({validation, className, placeholder, multiline, ...attrs}) => {\n\n\n\n    const classes = classNames(\n        styles['Input'],\n        styles[className],\n        styles[validation]\n    );\n\n    const Tag = multiline ? 'textarea' : 'input';\n\n    return (\n        <div className={styles.Wrapper}>\n            <Tag\n                className={classes}\n                placeholder={placeholder}\n                {...attrs}/>\n        </div>\n    );\n};\n\nInput.propTypes = {\n    className: PropTypes.string,\n    validation: PropTypes.oneOf(['valid', 'invalid', 'info']),\n    placeholder: PropTypes.string,\n    multiline: PropTypes.bool\n};\n\nInput.defaultProps = {\n    placeholder: null,\n    className: '',\n    validation: 'info',\n    multiline: false\n};\n\nexport default Input;\n","import valid from './icons/valid.svg';\nimport invalid from './icons/invalid.svg';\nimport info from './icons/info.svg';\nimport erase from './icons/erase.svg';\nimport arrowdown from './icons/arrow-down.svg';\nimport phone from './icons/phone.svg';\nimport location from './icons/location.svg';\n\nexport const iconTypes = {\n    info: info,\n    valid: valid,\n    invalid: invalid,\n    erase: erase,\n    arrowdown: arrowdown,\n    phone: phone,\n    location: location\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { iconTypes } from \"./types\";\n\nimport styles from './Icon.module.css'\n\n\nconst Icon = ({ id, iconType, className,\n                  onClickAction, ...attrs }) => {\n\n\n\n    const iconStyles = classNames(\n        styles['Icon'],\n        styles[className],\n        styles[iconType]\n    );\n\n    return (\n        <>\n            <label onClick={onClickAction} className={styles.Wrapper} htmlFor={id}>\n                <img id={id} className={iconStyles}\n                     src={iconTypes[iconType]}\n                     alt={iconType}\n                     {...attrs}/>\n            </label>\n        </>\n    )\n};\n\nIcon.propTypes = {\n    id: PropTypes.string,\n    iconType: PropTypes.oneOf(['valid', 'invalid', 'info',\n        'erase', 'arrowdown', 'phone', 'location']).isRequired,\n    className: PropTypes.string,\n    onClickAction: PropTypes.func\n};\n\nIcon.defaultProps = {\n    id: '',\n    iconType: 'info',\n    className: '',\n    onClickAction: () => {}\n};\n\nexport default Icon;\n","import React, { useState } from 'react';\nimport Input from \"../Input/Input\";\nimport Icon from \"../Icon/Icon\";\nimport PropTypes from 'prop-types';\n\nimport styles from './Datalist.module.css'\n\nconst Datalist = ({ options, value, onOptionSelected, onEraseText, ...attrs }) => {\n\n    const [listOpened, setListOpened] = useState(false);\n\n    return (\n        <>\n            <div className={styles.DatalistInputWrapper}>\n                <div className={styles.Container}>\n                    <Input value={value} className='DatalistInput' {...attrs}/>\n                    <Icon onClickAction={onEraseText} id='erase' iconType='erase'/>\n                    {/*<Icon onClickAction={() => setListOpened(!listOpened)} id='arrowdown' iconType='arrowdown'/>*/}\n                </div>\n                { listOpened &&\n                <ul className={styles.List}>\n                    { options.map((city, index) => <li onClick={(event) => {onOptionSelected(event); setListOpened(false)}}\n                                                       className={styles.Option}\n                                                       id={index}\n                                                       key={index}>{city}</li>) }\n                </ul> }\n            </div>\n        </>\n    )\n};\n\nDatalist.propTypes = {\n    options: PropTypes.arrayOf(PropTypes.string).isRequired,\n    value: PropTypes.string,\n    onEraseText: PropTypes.func.isRequired,\n    onOptionSelected: PropTypes.func.isRequired\n};\n\nDatalist.defaultProps = {\n    options: [],\n    value: '',\n    onEraseText: () => {},\n    onOptionSelected: () => {}\n};\n\nexport default Datalist;\n","const fs = require('fs');\n\nexport const transformCityJsonToArr = (url) => {\n    const rawData = fs.readFileSync(url);\n    const cities = JSON.parse(rawData);\n    return cities;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport styles from './Text.module.css'\n\nconst sizes = {\n    'normal': 'p',\n    'S': 'h3',\n    'M': 'h2',\n    'L': 'h1'\n};\n\nexport const Text = ({ className, validator, children,\n                         size, onClickAction, ...attrs }) => {\n\n    const classes = classNames(\n        styles['Text'],\n        styles[className],\n        styles[size],\n        styles[validator]\n    );\n\n    const Tag = sizes[size];\n\n    return (\n        <Tag onClick={onClickAction} className={classes} {...attrs}>{children}</Tag>\n    )\n\n};\n\nText.propTypes = {\n    className: PropTypes.string,\n    children: PropTypes.node.isRequired,\n    size: PropTypes.oneOf(['normal', 'S', 'M', 'L'])\n};\n\nText.defaultProps = {\n    className: '',\n    children: 'default text',\n    size: 'normal'\n}\n","import React, { Component } from 'react';\nimport Datalist from \"../components/Datalist/Datalist\";\nimport { connect } from 'react-redux';\nimport {eraseCity, getCityWeather, selectCity, typeText} from \"../store/actions/wheatherService\";\nimport {Text} from \"../components/Text/Text\";\n\nimport styles from './wheatherService.module.css';\nimport throttle from \"../utils/throttle\";\n\nclass WeatherService extends Component {\n\n    constructor(props) {\n        super(props);\n        this.onSelectCity = throttle(this.props.onSelectCity, 500)\n    }\n\n\n    onChangeHandler(event) {\n        this.props.onTypeText(event.target.value);\n        this.onSelectCity(event.target.value);\n    }\n\n    render() {\n        return (\n            <>\n                <Text size='L'>Weather in your city</Text>\n                <br/>\n                <Datalist\n                          value={this.props.currentValue}\n                          options={this.props.cities}\n                          onChange={(event) => this.onChangeHandler(event)}\n                          onEraseText={this.props.onEraseCity}\n                          onOptionSelected={(event) => this.props.onSelectCity(event.target.innerText)}/>\n                <br/>\n                { this.props.weather && this.props.currentValue && <>\n                    <Text size='L'>{this.props.currentValue}</Text>\n                    <ul className={styles.List}>\n                        <li className={styles.listElement}>\n                            Current temperature:\n                            <Text className='WeatherValue'>{this.props.weather.temp}</Text>\n                        </li>\n                        <li className={styles.listElement}>\n                            Current pressure:\n                            <Text className='WeatherValue'>{this.props.weather.pressure}</Text>\n                        </li>\n                        <li className={styles.listElement}>\n                            Current humidity:\n                            <Text className='WeatherValue'>{this.props.weather.humidity}</Text>\n                        </li>\n                        <li className={styles.listElement}>\n                            Minimum temperature:\n                            <Text className='WeatherValue'>{this.props.weather.temp_min}</Text>\n                        </li>\n                        <li className={styles.listElement}>\n                            Maximum temperature:\n                            <Text className='WeatherValue'>{this.props.weather.temp_max}</Text>\n                        </li>\n                    </ul>\n                </>}\n            </>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        currentValue: state.currentValue,\n        cities: state.cities,\n        weather: state.weather\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onTypeText: (content) => dispatch(typeText(content)),\n        onSelectCity: (city) => dispatch(getCityWeather(city)),\n        onEraseCity: () => dispatch(eraseCity()),\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WeatherService);\n","\nexport default function throttle(func, ms) {\n\n    let isThrottled = false;\n    let savedArgs;\n    let savedThis;\n\n    function wrapper() {\n\n        if (isThrottled) {\n            savedArgs = arguments;\n            savedThis = this;\n            return;\n        }\n\n        func.apply(this, arguments);\n\n        isThrottled = true;\n\n        setTimeout(function() {\n            isThrottled = false;\n            if (savedArgs) {\n                wrapper.apply(savedThis, savedArgs);\n                savedArgs = savedThis = null;\n            }\n        }, ms);\n    }\n\n    return wrapper;\n}\n","import * as actions from './actionTypes';\nimport {transformCityJsonToArr} from \"../../utils/transformCityJsonToArr\";\n\nexport const typeText = (content) => {\n    return {\n        type: actions.TYPE_TEXT,\n        content\n    }\n};\n\nexport const selectCity = (city) => {\n    return {\n        type: actions.SELECT_CITY,\n        city\n    }\n};\n\nexport const getCityWeather = (city) => {\n    return dispatch => {\n        dispatch(selectCity(city));\n        // fetch(`http://localhost:8080/data/2.5/weather?q=${city}&appid=b6907d289e10d714a6e88b30761fae22`)\n        fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=b41984b8b5135f1695c5faac30990138`)\n            .then((resp) => resp.json())\n            .then((data) => dispatch({\n                type: actions.GET_CURRENT_WEATHER,\n                weather: data.main\n            }))\n            .catch(err => dispatch({\n                type: actions.GET_CURRENT_WEATHER,\n                weather: null\n            }))\n    }\n}\n\nexport const eraseCity = () => {\n    return {\n        type: actions.ERASE_TEXT\n    };\n};\n\n","\nexport const TYPE_TEXT = 'TYPE_TEXT';\nexport const ERASE_TEXT = 'ERASE_TEXT';\nexport const SELECT_CITY = 'SELECT_CITY';\nexport const GET_CURRENT_WEATHER = 'GET_CURRENT_WEATHER';\n","import React from 'react';\nimport {Layout} from \"./components/Layout/Layout\";\nimport WeatherService from './containers/wheatherService';\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Layout>\n                <WeatherService/>\n            </Layout>\n        </div>\n);\n}\n\nexport default App;\n","import * as actions from '../actions/actionTypes';\n// import ID from \"../../utils/ID\";\n// import { initialState } from \"./initialState\";\n\nconst initialState = {\n    currentValue: '',\n    cities: [],\n    weather: null\n};\n\nexport const reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actions.TYPE_TEXT: {\n            console.log(action.content);\n            return {\n                ...state,\n                currentValue: action.content\n            }\n        }\n        case actions.ERASE_TEXT: {\n            return {\n                ...state,\n                currentValue: ''\n            }\n        }\n        case actions.SELECT_CITY: {\n            return {\n                ...state,\n                currentValue: action.city\n            }\n        }\n        case actions.GET_CURRENT_WEATHER: {\n            if (action.weather) {\n                console.log(action.weather);\n                const {temp, pressure, temp_min, temp_max, humidity} = action.weather;\n                const tempC = Math.round(temp - 273);\n                const temp_minC = Math.round(temp_min - 273);\n                const temp_maxC = Math.round(temp_max - 273);\n                const pressureHg = pressure * 0.75;\n                const weather = {\n                    temp: tempC,\n                    pressure: pressureHg,\n                    humidity: humidity,\n                    temp_min: temp_minC,\n                    temp_max: temp_maxC\n                };\n                return {\n                    ...state,\n                    weather\n                }\n            } else {\n                return {\n                    ...state,\n                    weather: null\n                }\n            }\n        }\n        default:\n            return state;\n    }\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport { reducer } from \"./store/reducers/main\";\n\n// const rootReducer = combineReducers()\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(thunk)));\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n"],"sourceRoot":""}